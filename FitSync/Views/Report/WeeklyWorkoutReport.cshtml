@model IEnumerable<FitSync.Models.WeeklyWorkoutReportData>

@{
    ViewBag.Title = "WeeklyWorkoutReport";
}
@{
    double totalDistanceKm = 0;
    double totalDurationInMinutes = 0;
    double totalCaloriesBurned = 0;
}
<!-- row -->
<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12">
            <div class="card">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-xl-5 col-xxl-12 mr-auto">
                            <div class="d-sm-flex d-block align-items-center">
                                <img src="images/illustration.png" alt="" class="mw-100 mr-3">
                                <div>
                                    <h4 class="fs-20 text-black">Generate your workout report for now </h4>
                                    <p class="fs-14 mb-0"></p>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-7 col-xxl-12 mt-3">
                            <form method="post" action="@Url.Action("WeeklyWorkoutReport")">
                                <div class="form-row">
                                    <div class="form-group col-md-3">
                                        <label class="col-form-label-sm">Workout Type</label>
                                        <select class="form-control form-control-sm" id="workoutTypeSelect" name="WorkoutType" required>
                                                <option value="All">All</option>
                                            @foreach (var workoutType in ViewBag.WorkoutTypes)
                                            {
                                                <option value="@workoutType.WorkoutName">@workoutType.WorkoutName</option>
                                            }
                                        </select>
                                        <small class="d-block"></small>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label class="col-form-label-sm">Date</label>
                                        <div class="input-group input-group-sm">
                                            <input type="date" name="date" class="form-control-sm" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                                        </div>
                                        <small class="d-block"></small>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label class="col-form-label-sm mb-2"></label>
                                        <div class="input-group input-group-sm">
                                            <button type="submit" class="btn btn-primary btn-md mb-2">Generate Report<i class="las la-angle-right ml-3 scale5"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xxl-8 col-lg-8">
            <div class="card">
                <div class="card-header bg-white">
                    <div class="d-flex align-items-center mr-3">
                        <span class="p-sm-3 p-2 mr-sm-3 mr-2 rounded-circle">
                            <img src="~/Assets/icons/workouts/@(ViewBag.WorkoutType).svg" alt="SVG" />
                        </span>
                        <h4 class="fs-20 text-black mb-0">Weekly Report - @ViewBag.From.ToShortDateString() - @ViewBag.To.ToShortDateString() - @ViewBag.WorkoutType workouts</h4>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table shadow-hover">
                            <thead>
                                <tr>
                                    <th><span class="font-w600 text-black fs-16">Date</span></th>
                                    <th><span class="font-w600 text-black fs-16">Workout</span></th>
                                    <th><span class="font-w600 text-black fs-16">Distance</span></th>
                                    <th><span class="font-w600 text-black fs-16">Time</span></th>
                                    <th><span class="font-w600 text-black fs-16">Calories</span></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var dailyReport in Model)
                                {

                                    <tr>
                                        <td>
                                            <p class="text-black mb-1 font-w600">@dailyReport.Date.DayOfWeek.ToString()</p>
                                            <span class="fs-14">@dailyReport.Date.ToShortDateString()</span>
                                        </td>
                                        <td>
                                            @if (dailyReport.Workouts.Any())
                                            {
                                                foreach (var workout in dailyReport.Workouts)
                                                {
                                                    double dailyDistanceInKm = workout.DistanceInKm;
                                                    totalDistanceKm += dailyDistanceInKm;

                                                    double dailyDurationInMinutes = workout.DurationInMinutes;
                                                    totalDurationInMinutes += dailyDurationInMinutes;

                                                    double dailyCaloriesBurned = workout.DurationInMinutes * workout.CaloriesBurnedPerMinute;
                                                    totalCaloriesBurned += dailyCaloriesBurned;

                                                    <div class="d-flex py-3 align-items-center">
                                                        <span class="activity-icon border border-info border-2 mr-3">
                                                            <img src="~/Assets/icons/workouts/@(workout.WorkoutType).svg" alt="SVG" />
                                                        </span>
                                                        <div>
                                                            <h6 class="font-w600 fs-16 mb-0">@workout.WorkoutType</h6>

                                                            @if (workout.DistanceInKm > 0)
                                                            {
                                                                <span class="fs-12"> @workout.DistanceInKm Km</span>
                                                            }
                                                            <span class="fs-12">@workout.DurationInMinutes Min</span>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div>No workouts</div>
                                            }
                                        </td>
                                        <td>
                                            <p class="text-black mb-1 font-w600">@dailyReport.Workouts.Sum(w => w.DistanceInKm) Km</p>
                                        </td>
                                        <td>
                                            <p class="text-black mb-1 font-w600">@dailyReport.Workouts.Sum(w => w.DurationInMinutes)” Min</p>
                                        </td>
                                        <td>
                                            <p class="text-black mb-1 font-w600">@dailyReport.Workouts.Sum(w => w.DurationInMinutes * w.CaloriesBurnedPerMinute).ToString("N0") Cal</p>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-4 col-xxl-4 col-lg-4">
            <div class="card">
                <div class="card-header d-sm-flex d-block border-0">
                    <div class="mr-auto pr-3">
                        <h4 class="text-black fs-20">
                            <span class="mr-sm-3 mr-2 rounded-circle">
                                <img src="~/Assets/icons/workouts/@(ViewBag.WorkoutType).svg" alt="SVG" />
                            </span>
                            Weekly Summary
                        </h4>
                        <p class="fs-13 mb-0">For @ViewBag.WorkoutType workouts</p>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="d-flex align-items-center bgl-info p-4">
                        <div>
                            <h6 class="fs-16 text-black mb-0">@totalDistanceKm km </h6>
                            <span class="fs-12">Total Distance Weekly</span>
                        </div>
                    </div>

                    <div id="distanceChart"></div>

                    <div class="d-flex align-items-center bgl-success p-4">
                        <div>
                            <h6 class="fs-16 text-black mb-0">
                                @totalDurationInMinutes" Min
                                <small> / @(ViewBag.User.DailyExerciseGoal * 7) Min</small>
                            </h6>  
                            <span class="fs-12"> Total Duration Weekly </span>

                        </div>
                    </div>

                    <div id="durationChart"></div>


                    <div class="d-flex align-items-center bgl-warning p-4">
                        <div>
                            <h6 class="fs-16 text-black mb-0"> @totalCaloriesBurned Cal <small> /  @(ViewBag.User.DailyCalorieGoal * 7) Cal</small></h6>   
                            <span class="fs-12">Total Calories Burned Weekly</span>

                        </div>
                    </div>
                    <div id="calorieChart"></div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script>
    const chartData = @Html.Raw(Json.Encode(ViewBag.ChartData));

    const distanceChartOptions = {
        series: [
            {
                name: 'Distance in KM',
                data: chartData.map(item => item.distance)
            }
        ],
        chart: {
            type: 'bar',
            height: 200
        },
        plotOptions: {
            bar: {
                horizontal: false,
                columnWidth: '55%',
                borderRadius: 5
            },
        },
        dataLabels: {
            enabled: false
        },
        xaxis: {
            categories: chartData.map(item => item.date),
            labels: {
                rotate: -45
            }
        },
        yaxis: {
            title: {
                text: 'KM'
            }
        },
        legend: {
            position: 'top',
            horizontalAlign: 'center',
            offsetY: -20
        },
        colors: ['#33BDFF']
        };

        const distanceChart = new ApexCharts(document.querySelector("#distanceChart"), distanceChartOptions);
        distanceChart.render();

        const durationChartOptions = {
            series: [
                {
                    name: 'Duration In Minutes',
                    data: chartData.map(item => item.duration)
                }
            ],
            chart: {
                type: 'line',
                height: 200
            },
            annotations: {
                yaxis: [
                    {
                        y: 60,
                        borderColor: '#00E396',
                        label: {
                            borderColor: '#00E396',
                            style: {
                                color: '#fff',
                                background: '#00E396',
                            },
                            text: 'Daily Target',
                        }
                    },
                ]
            },
            dataLabels: {
                enabled: false
            },
            xaxis: {
                categories: chartData.map(item => item.date),
                labels: {
                    rotate: -45
                }
            },
            yaxis: {
                title: {
                    text: 'Duration in Minutes'
                }
            },
            legend: {
                position: 'top',
                horizontalAlign: 'center',
                offsetY: -20
            },
            colors: ['#33FFDB']
        };

        const durationChart = new ApexCharts(document.querySelector("#durationChart"), durationChartOptions);
        durationChart.render();

        const calorieChartOptions = {
            series: [
                {
                    name: 'Calories',
                    data: chartData.map(item => item.calories)
                }
            ],
            chart: {
                type: 'bar',
                height: 200
            },
            annotations: {
                xaxis: [
                    {
                        x: 400,
                        borderColor: '#00E396',
                        label: {
                            borderColor: '#00E396',
                            style: {
                                color: '#fff',
                                background: '#00E396',
                            },
                            text: 'Daily Target',
                        }
                    },
                ]
            },
            plotOptions: {
                bar: {
                    horizontal: true,
                    columnWidth: '55%',
                    borderRadius: 5
                },
            },
            dataLabels: {
                enabled: false
            },
            xaxis: {
                categories: chartData.map(item => item.date),
                labels: {
                    rotate: -45
                }
            },
            yaxis: {
                title: {
                    text: 'Calories'
                }
            },
            legend: {
                position: 'top',
                horizontalAlign: 'center',
                offsetY: -20
            },
            colors: ['#FFB433']
        };


        const calorieChart = new ApexCharts(document.querySelector("#calorieChart"), calorieChartOptions);
        calorieChart.render();
    </script>
}